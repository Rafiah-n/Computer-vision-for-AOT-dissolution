import os
import cv2
import numpy as np
from glob import glob
import os
import cv2
import numpy as np
from glob import glob

class_colours = {
    0: 255,    # Class 0 -> white 255
    1: 150,   # Class 1 -> gray value 150
}

tasks = [
    "10%-AOT-Dissolution-Tracking", 
    "30%-AOT-Dissolution-Tracking", 
    "50%-AOT-Dissolution-Tracking", 
    "70%-AOT-Dissolution-Tracking"
]


splits = ["train", "test", "valid"]

for task in tasks:
  for s in splits:
    img_dir = f"dataset-augmented/{task}/{a}/images"
    label_dir = f"dataset-augmented/{task}/{a}/labels"
    mask_out_dir = f"sgrnade2/dataset-augmented/{task}/{a}/masks"
    os.makedirs(mask_out_dir, exist_ok=True)
    
    for img_path in glob(os.path.join(img_dir, "*.jpg")):
        img = cv2.imread(img_path)
        h, w = img.shape[:2]
        mask = np.zeros((h, w), dtype=np.uint8)
    
        label_path = os.path.join(label_dir, os.path.basename(img_path).replace(".jpg", ".txt"))
        if os.path.exists(label_path):
            with open(label_path, "r") as f:
                for line in f:
                    cls, *coords = map(float, line.strip().split())
                    points = np.array(coords, dtype=np.float32).reshape(-1, 2)
                    points[:, 0] *= w
                    points[:, 1] *= h
                    
                    colour = class_colours.get(int(cls), 255) # default to 255 if class not in dict
                    cv2.fillPoly(mask, [points.astype(np.int32)], color=colour)
    
        cv2.imwrite(os.path.join(mask_out_dir, os.path.basename(img_path).replace(".jpg", ".png")), mask)
